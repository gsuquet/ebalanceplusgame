name: GitHub Actions Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - main
permissions:
  contents: read
  issues: write
  pull-requests: write
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    environment: preview
    steps:

      - name: Create deployment in GitHub
        id: create_deployment
        run: |
          create_deployment=$(curl -L \
          -X POST \
          -H 'Accept: application/vnd.github+json' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'X-GitHub-Api-Version: 2022-11-28' \
          -H 'Content-type: application/json' \
          https://api.github.com/repos/${{ github.repository }}/deployments \
          -d '{
            "ref":"${{ github.event.ref }}",
            "payload":"{}",
            "environment":"preview",
            "description":"Preview deployment for ${{ github.event.head_commit.message }}",
          }')
          echo github_deployment_output=$create_deployment >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm install --global vercel@canary

      - name: Pull Vercel Environment Information
        id: vercel_pull
        run: |
          echo pull_output=$(vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}) >> $GITHUB_OUTPUT

      - name: Build Project Artifacts
        id: vercel_build
        run: |
          echo build_output=$(vercel build --yes --token=${{ secrets.VERCEL_TOKEN }}) >> $GITHUB_OUTPUT

      - name: Deploy Project Artifacts to Vercel
        id: vercel_deploy
        run: |
          vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} >> output.log
          echo log_url=$(grep -oP 'Inspect: \Khttps://\S+' output.log) >> $GITHUB_OUTPUT
          echo preview_url=$(grep -oP 'Preview: \Khttps://\S+' output.log) >> $GITHUB_OUTPUT
          echo deployment_output=$(cat output.log) >> $GITHUB_OUTPUT

      - name: Update deployment status to success in GitHub
        id: deployment_status_success
        if: ${{ success() }}
        run: |
          echo deployment_status_update_output=$(
            curl -L \
            -X POST \
            -H 'Accept: application/vnd.github+json' \
            -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            -H 'Content-type: application/json' \
            https://api.github.com/repos/${{ github.repository }}/deployments/${{ fromJson(steps.create_deployment.outputs.github_deployment_output).id }}/statuses \
            -d '{
              "environment":"preview",
              "state":"success",
              "log_url":"${{ steps.vercel_deploy.outputs.log_url }}",
              "environment_url":"${{ steps.vercel_deploy.outputs.preview_url }}",
              "description":"Deployment finished successfully."
            }'
          ) >> $GITHUB_OUTPUT

      - name: Update deployment status to failure in GitHub
        id: deployment_status_failure
        if: ${{ failure() }}
        run: |
          echo deployment_status_update_output=$(
            curl -L \
            -X POST \
            -H 'Accept: application/vnd.github+json' \
            -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            -H 'Content-type: application/json' \
            https://api.github.com/repos/${{ github.repository }}/deployments/${{ fromJson(steps.create_deployment.outputs.github_deployment_output).id }}/statuses \
            -d '{
              "environment":"preview",
              "state":"failure",
              "log_url":"${{ steps.vercel_deploy.outputs.log_url }}",
              "environment_url":"${{ steps.vercel_deploy.outputs.preview_url }}",
              "description":"Deployment failed."
            }'
          ) >> $GITHUB_OUTPUT

      - name: Create issue
        if: ${{ failure() }}
        run: |
          curl -L \
          -X POST \
          -H 'Accept: application/vnd.github+json' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'X-GitHub-Api-Version: 2022-11-28' \
          -H 'Content-type: application/json' \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d '{
            "title":"Failed to deploy preview for ${{ github.event.head_commit.message }}",
            "body":"${{ steps.vercel_deploy.outputs.deployment_output }}",
            "labels":["bug","to sort"]
          }'

      - name: Create comment if pull-request
        if: ${{ github.event_name == 'pull_request' && success() }}
        run: |
          curl -L \
          -X PATCH \
          -H 'Accept: application/vnd.github+json' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H "'X-GitHub-Api-Version: 2022-11-28" \
          -H 'Content-type: application/json' \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
          -d '{
            "body": "| Name | Status | Preview |\n| :--- | :----- | :------ |\n| **ebalanceplusgame** | :white_check_mark: Ready ([Inspect](${{ steps.vercel_deploy.outputs.log_url }})) | [Visit Preview](${{ steps.vercel_deploy.outputs.preview_url }}) |"
          }'
